{"version":3,"sources":["assets/logo.svg","hooks/useForm.js","context/AppContext.js","components/helpers/toast.js","types/types.js","components/login/LoginScreen.js","routers/PublicRoutes.js","assets/logo_white.svg","components/dashboard/DashBoardNavBar.js","components/dashboard/DashBoardMovementsList.js","components/dashboard/DashBoardModalForm.js","components/dashboard/DashBoardDeleteModal.js","components/dashboard/DashBoardLayout.js","components/dashboard/DashboardScreen.js","routers/PrivateRoutes.js","routers/AppRouter.js","auth/authReducer.js","components/MainScreen.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","AppContext","createContext","toast","container","icon","topContainer","document","querySelector","color","alert","createElement","innerHTML","append","setTimeout","remove","console","clear","propTypes","PropTypes","string","isRequired","types","LoginScreen","history","dispatch","useContext","pushState","setPushState","email","password","processLogin","data","a","user_id","user_email","user_firstname","user_lastname","user_nickname","user_password","user_profilepic","btnLogin","innerText","disabled","type","payload","id","username","lastname","profilepic","useEffect","push","className","src","logo","alt","onSubmit","e","preventDefault","length","fetch","process","then","response","json","error","catch","err","autoComplete","placeholder","onChange","required","onClick","PublicRoutes","exact","path","component","to","DashBoardNavBar","useHistory","replace","aria-hidden","DashBoardMovementsList","movement_amount","movement_date","movement_description","movement_type","toString","substr","DashBoardModalForm","edit","user","reload","setReload","initialForm","date","Date","toISOString","split","description","amount","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","data-bs-dismiss","aria-label","apiUrl","movementData","userid","parseInt","movement_id","method","body","JSON","stringify","headers","success","click","handleInsert","max","selected","maxLength","form","DashBoardDeleteModal","data-id","DashBoardLayout","idState","setIdState","editState","setEditState","dataState","setDataState","negative","amountState","setAmountState","finalState","forEach","Math","sign","class","data-bs-toggle","data-bs-target","map","DashboardScreen","PrivateRoutes","AppRouter","logged","authReducer","state","action","MainScreen","useReducer","parse","localStorage","getItem","setItem","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5b4b63e5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2eea6f89.svg\";","import { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState( initialState );\n\n    const reset = () => {\n        setValues( initialState )\n    }\n\n    const handleInputChange = ( { target } ) => {\n        \n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    \n\n    return [ values, handleInputChange, reset ];\n\n}","import { createContext } from \"react\";\n\nexport const AppContext = createContext();\n","import PropTypes from 'prop-types';\nimport '../../css/toast.css'\n\nexport const toast = ( container, value, icon ) => {\n    \n    const topContainer = document.querySelector( container );\n\n    if ( icon === 'SUCCESS' ) {\n\n        icon = { icon: 'check-circle', color: 'success'};\n\n    }\n\n    if ( icon === 'ERROR' ) {\n\n        icon = { icon: 'exclamation-circle', color: 'danger'};\n\n    }\n\n\n        const alert = document.createElement('div');\n        alert.innerHTML = `\n            <div class=\"toast show animate__animated animate__fadeInDown\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                <div class=\"d-flex justify-content-center\">\n                    <div class=\"toast-body\">\n                    <i class=\"fas fa-${ icon.icon } px-1 text-${ icon.color }\"></i> ${ value }\n                    </div>\n                </div>\n            </div>`;\n\n        if ( !document.querySelector('.toast') && topContainer ) {\n\n            topContainer.append(alert);\n            \n            setTimeout(() => {\n                // Check if toast container exists, if so remove it\n                ( document.querySelector('.toast')) &&\n                    document.querySelector('.toast').remove();\n            }, 3000);\n\n        }\n\n        // Prevent api key url exposures\n        console.clear();\n}\n\ntoast.propTypes = {\n    container: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n};\n","export const types = {\n\n    login: '[auth] login',\n    logout: '[auth] logout',\n\n}","import React, { useContext, useEffect, useState } from 'react';\nimport logo from '../../assets/logo.svg';\nimport { useForm } from '../../hooks/useForm';\nimport { AppContext } from '../../context/AppContext';\nimport { toast } from '../helpers/toast';\nimport { types } from '../../types/types';\nimport '../../css/login.css';\n\n\nexport const LoginScreen = ( { history } ) => {\n\n    const { dispatch } = useContext( AppContext );\n\n    // Redirect state\n    const [pushState, setPushState] = useState(false);\n\n    const initialForm = {\n        email: '',\n        password: ''\n    }\n\n    // Handle form values\n    const [ values, handleInputChange, reset ] = useForm( initialForm );\n\n    const { email, password } = values;\n\n    // This will handle all the login process\n    // Get the data from api-key, dispatch to context and redirect to dashboard\n    const processLogin = async( data ) => {\n\n        // Get user data\n        const {\n            user_id,\n            user_email, \n            user_firstname,\n            user_lastname,\n            user_nickname,\n            user_password,\n            user_profilepic \n        } = data;\n\n        if ( password !== user_password ) {\n\n            toast( '.container', 'ERROR: password is incorrect', 'ERROR');\n            return;\n\n        }\n\n        // Change text and disable login button\n        const btnLogin = document.querySelector('.btn-login');\n        btnLogin.innerText = 'WAIT!';\n        btnLogin.disabled = true;\n\n        // Send user data to context\n        await dispatch( {\n            type: types.login,\n            payload: {\n                id: user_id,\n                username: user_nickname,\n                password: user_password,\n                name: user_firstname,\n                lastname: user_lastname,\n                email: user_email,\n                profilepic: user_profilepic\n            }\n        } );\n    \n        // Cleanup form\n        reset();\n\n        setPushState( true );\n    }\n\n    // Handle login form, fetch user from api key\n    // if not exists or server is down, show an error alert\n    const HandleLogin = () => {\n\n        const apiUrl = process.env.REACT_APP_API_URL;\n\n        fetch(`${apiUrl}/api/users/u/${email}`)\n            .then(response => response.json())\n            .then(data => {\n\n                if (data.error) {\n                    toast( '.container', 'Email not found in database.', 'ERROR' );\n                    return\n                } \n\n                processLogin( data[0] );\n            \n            })\n            .catch( err => { \n                toast( '.container', `FATAL: ${err}`, 'ERROR' )  \n            } );\n    }\n\n    // Validate input values\n    const validateValues = ( e ) => {\n\n        e.preventDefault();\n        \n        if ( email === '' || password === '') {\n            toast( '.container', 'Email/password is empty.', 'ERROR' );\n            return;\n        }\n\n        if ( email.length < 6 || password.length < 6 ) {\n            toast( '.container', 'Email/password too short.', 'ERROR' );\n            return;\n        }\n\n        HandleLogin();\n\n    }\n\n    // Wait for login process and then redirect\n    useEffect( () => {\n\n        ( pushState ) && history.push('/dashboard');\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[ pushState ] );\n\n    return (\n        <div className='container text-center my-5 d-flex align-items-center justify-content-center animate__animated animate__fadeInDown'>\n            <div className='card form-content shadow d-flex align-items-center justify-content-center login-container'>\n                <img className='img-fluid logo-login' src={ logo } alt='Finances App Logo' />\n                <form onSubmit={ validateValues }>\n                    <input \n                        type='email'\n                        autoComplete='true'\n                        className='form-control' \n                        name='email'\n                        placeholder='email'\n                        value={ email }\n                        onChange={ handleInputChange }\n                        required\n                    />\n                    <input \n                        type='password'\n                        autoComplete='false'\n                        className='form-control' \n                        name='password' \n                        placeholder='password'\n                        value={ password } \n                        onChange={ handleInputChange }\n                        required\n                    />\n                    <button \n                        className='btn btn-login shadow'\n                    >\n                        LOGIN\n                    </button>\n                </form>\n                <div className='form-footer mt-5'>\n                    <button\n                        className={ 'links' }\n                        onClick={ () => toast( '.container', 'Not implemented yet, sorry.', 'ERROR' ) }\n                    >\n                        Forgot Password\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { LoginScreen } from '../components/login/LoginScreen';\n\nexport const PublicRoutes = () => {\n    return (\n        <Switch>\n            <Route exact path='/login' component={ LoginScreen } />\n            <Route exact path='/' component={ LoginScreen } />\n            <Redirect to='/' />\n        </Switch>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/logo_white.671d8380.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, Link } from 'react-router-dom';\nimport { types } from '../../types/types';\nimport logo from '../../assets/logo_white.svg';\nimport '../../css/navbar.css';\n\nexport const DashBoardNavBar = ( { dispatch } ) => {\n\n    const history = useHistory();\n\n    const handleLogout = () => {\n\n        dispatch( {\n            type: types.logout\n        } );\n\n        history.replace('/')\n    }\n    \n    return (\n        <nav className='navbar navbar-expand-lg navbar-dark bg-brand shadow py-3 px-0 d-flex justify-content-between animate__animated animate__fadeInDown'>\n            <Link to='/'>\n                <img className='img-fluid nv-logo' src={ logo } alt='Logo'/>\n            </Link>\n            <div className='mx-3'>\n                <button \n                    className='btn btn-logout mx-2'\n                    onClick={ handleLogout }\n                >\n                    <i className=\"fa fa-sign-out me-1\" aria-hidden=\"true\"></i> Logout\n                </button>\n            </div>\n            \n        </nav>\n    );\n}\n\nDashBoardNavBar.propTypes = {\n    user: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const DashBoardMovementsList = ( { data } ) => {\n\n    const { movement_amount, movement_date, movement_description, movement_type } = data;\n\n\n    return (\n            <div className=\"container-fluid container-list my-2\">\n                <div className=\"row row-cols-2\">\n                    <div className=\"col w-75\">\n                        <i className={`fas fa-circle text-${ movement_type } me-3`}></i>\n                        { movement_description }\n                    </div>\n                    <div className={ `col text-${ movement_type } w-25 col-mov-amount`}>\n                        ${ movement_amount }\n                    </div>\n                    <div className=\"col mb-0 pb-0 w-75\">\n                    </div>\n                    \n                    <div className=\"col mt-0 fst-italic w-25 col-mov-date\">\n                        { \n                            // If date is available, only get YYYY-MM-DD\n                            (movement_date) &&\n                                movement_date.toString().substr(0,10)\n                        }\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nDashBoardMovementsList.propTypes = {\n    data: PropTypes.object.isRequired\n};","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from '../../hooks/useForm';\nimport { AppContext } from '../../context/AppContext';\nimport { toast } from '../helpers/toast';\nimport '../../css/dashboard.css';\n\nexport const DashBoardModalForm = ( { edit, data } ) => {\n\n    const { user, reload, setReload } = useContext( AppContext );\n\n    // If we are editing, take values from props\n    const initialForm = {\n        type: (edit) ? data.movement_type : '',\n        date: (edit) ? data.movement_date.toString().substr(0,10) : new Date().toISOString().split('T')[0],\n        description: (edit) ? data.movement_description : '',\n        amount: (edit) ? data.movement_amount : 0\n    }\n\n    const [ values, handleInputChange, reset ] = useForm( initialForm );\n\n    const { amount, date, description, type } = values;\n\n    // Reset form according to props\n    useEffect( () => {\n\n        reset(); \n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ edit, data ] );\n\n    // Push values into database\n    const handleInsert = () => {\n\n        const apiUrl = process.env.REACT_APP_API_URL;\n\n        const movementData = {\n            userid: user.id,\n            date: date,\n            type: type,\n            amount: parseInt(amount),\n            description: description\n        };\n        \n        fetch(  \n            // Dinamically change url and method according to form type \n            ( edit ) \n            ? `${apiUrl}/api/movements/${ data.movement_id }` \n            : `${apiUrl}/api/movements`, {\n            method: ( edit ) ? 'PUT' : 'POST',\n            body: JSON.stringify(movementData),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(response => response.json())\n            .then(data => {\n\n                if (data.error) {\n                    toast( '.modal', `ERROR: database operation has failed (${ data.error })`, 'ERROR' );\n                    return\n                }\n\n                if (data.success) {\n                    toast( '.container', 'GREAT! Movement has been processed', 'SUCCESS' );\n                    setReload( !reload );\n                    reset();\n                    document.querySelector('.btn-form-close').click();\n                    return\n                }\n            }\n            )\n            .catch( err => { \n                toast( '.modal', `FATAL: ${err}`, 'ERROR' )  \n            } );\n    }\n\n    // Validate input values\n    const validateValues = ( e ) => {\n\n        e.preventDefault();\n        \n        if ( amount === 0 || description === '') {\n            toast( '.modal', 'Description is empty or amount is zero.', 'ERROR' );\n            return;\n        }\n\n        if ( description.length < 6 ) {\n            toast( '.modal', 'Description too short.', 'ERROR' );\n            return;\n        }\n\n        if ( type === '' ) {\n            toast( '.modal', 'You must choose a type', 'ERROR' );\n            return;\n        }\n\n        handleInsert( amount, date, description, type );\n\n    } \n\n    return (\n        <div\n            className='modal fade'\n            id='dashboardModalForm'\n            data-bs-backdrop='static'\n            data-bs-keyboard='false'\n            tabIndex='-1'\n            aria-labelledby='dashboardModalFormLabel'\n            aria-hidden='true'\n        >\n            <div className='modal-dialog'>\n                <div className='modal-content'>\n                    <div className='modal-header modal-header-add py-2'>\n                        <h5 className='modal-title' id='dashboardModalFormLabel'>\n                            <i className='fas fa-cloud-upload-alt mx-2'></i>\n                            { ( edit ) ? 'Edit movement' : 'Insert new movement' }\n                        </h5>\n                        <button\n                            type='button'\n                            className='btn-close btn-close-white'\n                            data-bs-dismiss='modal'\n                            aria-label='Close'\n                        ></button>\n                    </div>\n                    <div className='modal-body'>\n\n                        <form id='modal-add' onSubmit={ validateValues }>\n                            <div className='input-group flex-nowrap'>\n                                <select \n                                    className='form-select'\n                                    name='type'\n                                    value={ type }\n                                    onChange={ handleInputChange }\n                                    disabled= { ( edit ) ? true : false }\n                                >\n                                    <option value=''>\n                                        Choose type\n                                    </option>\n                                    <option value='ING'>\n                                        INGRESS\n                                    </option>\n                                    <option value='EGR'>\n                                        EGRESS\n                                    </option>\n                                </select>\n                            </div>\n                            <div className='input-group flex-nowrap' >\n                            <input\n                                autoComplete='false'\n                                className='form-control'\n                                type=\"date\"\n                                max={ date }\n                                name=\"date\"\n                                value={ date }\n                                selected={ date }\n                                onChange={ handleInputChange }\n                                required\n                                />\n                            </div>\n                            <div className='input-group flex-nowrap'>\n                                <input \n                                    type='number' \n                                    className='form-control' \n                                    placeholder='Amount' \n                                    name='amount'\n                                    value={ amount }\n                                    onChange={ handleInputChange }\n                                    required\n                                />\n                            </div>\n                            <div className='input-group flex-nowrap'>\n                                <input \n                                    type='text' \n                                    className='form-control' \n                                    placeholder='Description'\n                                    maxLength='25' \n                                    name='description'\n                                    value={ description }\n                                    onChange={ handleInputChange }\n                                    required\n                                />\n                            </div>\n                        </form>\n\n                    </div>\n                    <div className='modal-footer'>\n                        <button\n                            type='button'\n                            className='btn btn-secondary btn-form-close px-3'\n                            data-bs-dismiss='modal'\n                        >\n                            Close\n                        </button>\n                        <button \n                            type='submit' \n                            className='btn btn-send py-2 px-4'\n                            form='modal-add'\n                        >\n                            Send\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nDashBoardModalForm.propTypes = {\n    edit: PropTypes.bool.isRequired,\n    data: PropTypes.object.isRequired\n};\n","import React, { useContext } from 'react';\nimport { AppContext } from '../../context/AppContext';\nimport { toast } from '../helpers/toast';\n\nexport const DashBoardDeleteModal = ( { id } ) => {\n\n    const { reload, setReload } = useContext( AppContext );\n\n    const handleSubmit = ( e ) => {\n\n        const apiUrl = process.env.REACT_APP_API_URL;\n\n        e.preventDefault();\n\n        fetch(\n            // Check if we are trying to remove a single movement or all movements in database. -999999 is the id for the cleanup operation\n            ( id === -999999 )\n            ? `${apiUrl}/api/movements/`\n            : `${apiUrl}/api/movements/${id}`, {\n            method: 'DELETE',\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(response => response.json())\n            .then(data => {\n\n                if (data.error) {\n                    toast( '.span-toast', `ERROR: database operation has failed (${ data.error })`, 'ERROR' );\n                    return\n                }\n\n                if (data.success) {\n\n                    // Change context to refresh layout\n                    setReload( !reload );\n\n                    document.querySelector('.btn-delete-close').click();\n                    return\n                }\n            }\n            )\n            .catch( err => { \n                toast( '.span-toast', `FATAL: ${err}`, 'ERROR' )  \n            } );\n\n    }\n\n    return (\n        <div\n            className='modal fade'\n            id='deleteModal'\n            data-bs-backdrop='static'\n            data-bs-keyboard='false'\n            data-id=''\n            tabIndex='-1'\n            aria-labelledby='deleteModalLabel'\n            aria-hidden='true'\n        >\n            <div className='modal-dialog'>\n                <div className='modal-content'>\n                    <div className='modal-header modal-header-delete p-2'>\n                        <i className='fas fa-exclamation-triangle mx-2'></i>\n                        <h5 className='modal-title' id='deleteModalLabel'>\n                            WARNING!\n                        </h5>\n                        <button\n                            type='button'\n                            className='btn-close btn-close-white'\n                            data-bs-dismiss='modal'\n                            aria-label='Close'\n                        ></button>\n                    </div>\n                    <div className='modal-body text-center modal-delete-text'>\n                        {\n                            ( id === -999999 )\n                            ? 'THIS WILL REMOVE ALL MOVEMENTS IN DATABASE.\\n Are you sure you want to perform this action?'\n                            : 'Are you sure you want to remove this movement?'\n                        }\n                    </div>\n                    <div className='modal-footer justify-content-center'>\n                        <button\n                            type='button'\n                            className='btn btn-secondary btn-delete-close'\n                            data-bs-dismiss='modal'\n                        >\n                            Cancel\n                        </button>\n                            <form onSubmit={ handleSubmit }> \n                            <button\n                                type='submit' \n                                className='btn btn-danger'\n                            >\n                                Do it!\n                            </button>\n                            <span className='span-toast'></span>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DashBoardMovementsList } from './DashBoardMovementsList';\nimport { DashBoardModalForm } from './DashBoardModalForm';\nimport { DashBoardDeleteModal } from './DashBoardDeleteModal';\nimport '../../css/dashboard.css';\n\nexport const DashBoardLayout = ( {data} ) => {\n\n\n    // Save movement id on a state\n    const [idState, setIdState] = useState(0);\n\n    // This are used for add/edit form\n    const [editState, setEditState] = useState(false);\n    const [dataState, setDataState] = useState({});\n\n    // State for current amount\n    const [amountState, setAmountState] = useState( { value: 0, negative: false } );\n\n    // Calculate current amount\n    useEffect ( () =>  {\n\n        let finalState = 0;\n\n        // Check if we have some data to iterate\n        if ( data.length > 0 ) {\n\n            data.forEach( data => {\n\n                if ( data.movement_type === 'ING' ) {\n                    finalState += parseInt(data.movement_amount);\n                }\n\n                if ( data.movement_type === 'EGR' ) {\n                    finalState -= parseInt(data.movement_amount);\n                }\n\n            });\n        }\n\n        // Check if amount is negative\n        if ( Math.sign(finalState) === -1 ) {\n\n            setAmountState ( {\n                value: finalState,\n                class: 'text-danger'\n            });\n\n        } else {\n\n            setAmountState ( {\n                value: finalState,\n                class: ''\n            });\n\n        }\n\n    }, [ data]);\n\n    return (\n        <div className='container'>\n            <div className='row row-cols-1 row-cols-md-2 g-4 my-5'>\n                <div className='col'>\n                    <div className='card shadow rounded border-0 card-left animate__animated animate__fadeInLeft container-toast-fixed'>\n                        <div className='card-body'>\n                            <p className='card-title'>\n                                <i className='fa fa-money px-3' aria-hidden='true'></i>\n                                Current Amount\n                            </p>\n                            <hr />\n                            { \n                                <p className={`card-amount px-3 ${ amountState.class }`}>\n                                    ${ amountState.value }\n                                </p>\n\n                            }\n                            <hr />\n                        </div>\n                        <div className='d-flex justify-content-center'>\n                            <button \n                                className='btn btn-add mx-3 mb-4 p-2 shadow-sm'\n                                data-bs-toggle='modal' \n                                data-bs-target='#dashboardModalForm'\n                                onClick={ () => setEditState( false ) }\n                            >\n                                Add movement\n                            </button>\n                            <button \n                                className='btn btn-danger mx-3 mb-4 p-2 shadow-sm'\n                                data-bs-toggle='modal'      \n                                data-bs-target='#deleteModal'\n                                onClick={ () => setIdState( -999999 ) }\n                            >\n                                Clean movements\n                            </button>\n                        </div>\n                        \n                    </div>\n                </div>\n                <div className='col'>\n                    <div className='card shadow rounded border-0 card-movements animate__animated animate__fadeInRight'>\n                        <div className='card-body'>\n                            <p className='card-title'>\n                                <i className='fa fa-bar-chart p-2' aria-hidden='true'></i>\n                                Your activity\n                            </p>\n                            <hr />\n                                <ul className='list-group list-group-flush'>\n        \n                                    {\n                                        (data.length > 0) &&\n                                        // Iterate and draw movements\n                                        data.map( ( data ) => {\n\n                                            return (\n                                                <li className=\"list-group-item\" key={`${ data.movement_id }`}>\n\n                                                <DashBoardMovementsList data={ data } />\n\n                                                <div className=\"mb-3 mx-4 fst-italic w-75 footer-list\">\n                                                    <i className='movement-type'></i>\n                                                        { data.movement_type }\n                                                        <button \n                                                            className='btn btn-outline-secondary btn-sm btn-list-edit mx-2'\n                                                            data-bs-toggle='modal' \n                                                            data-bs-target='#dashboardModalForm'\n                                                            onClick={ () => { setEditState( true ); setDataState( data ) } }\n                                                        >\n                                                            Edit\n                                                        </button>\n                                                        <button \n                                                            className='btn btn-outline-secondary btn-sm btn-list-delete ms-0'\n                                                            data-bs-toggle='modal'      \n                                                            data-bs-target='#deleteModal'\n                                                            onClick={ () => setIdState( data.movement_id ) }\n                                                        >\n                                                            Delete\n                                                        </button>\n                                                </div>\n\n                                                </li>\n                                                )\n\n                                        } )\n                                        }\n\n                                </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className='col'>\n                    <div className='card shadow rounded border-0 card-movements animate__animated animate__fadeInRight'>\n                        <div className='card-body'>\n                            <p className='card-title'>\n                                <i className='fa fa-arrow-up p-2' aria-hidden='true'></i>\n                                Ingress\n                            </p>\n                            <hr />\n                                <ul className='list-group list-group-flush'>\n        \n                                    {\n                                        (data.length > 0) &&\n                                        // Iterate and draw movements\n                                        data.map( ( data ) => {\n\n                                            if ( data.movement_type === 'ING' ) {\n\n                                                return (\n                                                    <li className=\"list-group-item\" key={`${ data.movement_id }`}>\n                                                        <DashBoardMovementsList data={ data } />\n\n                                                        <div className=\"mb-3 mx-4 fst-italic w-75 footer-list\">\n                                                            <i className='movement-type'></i>\n                                                            { data.movement_type }\n                                                            <button \n                                                                className='btn btn-outline-secondary btn-sm btn-list-edit mx-2'\n                                                                data-bs-toggle='modal' \n                                                                data-bs-target='#dashboardModalForm'\n                                                                onClick={ () => { setEditState( true ); setDataState( data ) } }\n                                                            >\n                                                                Edit\n                                                            </button>\n                                                            <button \n                                                                className='btn btn-outline-secondary btn-sm btn-list-delete ms-0'\n                                                                data-bs-toggle='modal'      \n                                                                data-bs-target='#deleteModal'\n                                                                onClick={ () => setIdState( data.movement_id ) }\n                                                            >\n                                                            Delete\n                                                            </button>\n                                                        </div>\n                                                        \n                                                    </li>\n                                                    )\n                                            }\n                                            // Fallback return\n                                            return ('');\n                                        } )\n                                    }\n\n                                </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className='col'>\n                    <div className='card shadow rounded border-0 card-movements animate__animated animate__fadeInRight'>\n                        <div className='card-body'>\n                            <p className='card-title'>\n                                <i className='fas fa-arrow-down p-2' aria-hidden='true'></i>\n                                Egress\n                            </p>\n                            <hr />\n                                <ul className='list-group list-group-flush'>\n        \n                                    {\n                                        (data.length > 0) &&\n                                        // Iterate and draw movements\n                                        data.map( ( data ) => {\n\n                                            if ( data.movement_type === 'EGR' ) {\n\n                                                return (\n                                                    <li className=\"list-group-item\" key={`${ data.movement_id }`}>\n                                                    <DashBoardMovementsList data={ data } />\n                                                    \n                                                    <div className=\"mb-3 mx-4 fst-italic w-75 footer-list\">\n                                                            <i className='movement-type'></i>\n                                                            { data.movement_type }\n                                                            <button \n                                                                className='btn btn-outline-secondary btn-sm btn-list-edit mx-2'\n                                                                data-bs-toggle='modal' \n                                                                data-bs-target='#dashboardModalForm'\n                                                                onClick={ () => { setEditState( true ); setDataState( data ) } }\n                                                            >\n                                                                Edit\n                                                            </button>\n                                                            <button \n                                                                className='btn btn-outline-secondary btn-sm btn-list-delete ms-0'\n                                                                data-bs-toggle='modal'      \n                                                                data-bs-target='#deleteModal'\n                                                                onClick={ () => setIdState( data.movement_id ) }\n                                                            >\n                                                            Delete\n                                                            </button>\n                                                    </div>\n\n                                                    </li>\n                                                    )\n                                            }\n                                            // Fallback return\n                                            return ('');\n                                        } )\n                                    }\n\n                                </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            { \n                <DashBoardModalForm edit={ editState } data={ dataState } /> \n            }\n            { \n                // Call delete modal with movement id as parameter\n                <DashBoardDeleteModal id={ idState }/> \n            }\n        </div>\n    );\n\n}\n\nDashBoardLayout.propTypes = {\n    data: PropTypes.array.isRequired\n};\n\n","import React, { useContext, useEffect, useState } from 'react';\nimport { DashBoardNavBar } from './DashBoardNavBar';\nimport { AppContext } from '../../context/AppContext';\nimport { DashBoardLayout } from './DashBoardLayout';\nimport '../../css/dashboard.css';\n\nexport const DashboardScreen = () => {\n\n    const { user, dispatch, reload } = useContext( AppContext );\n\n    // Get the user id\n    const { id } = user;\n\n    // Create state for data\n    const [ dataState, setDataState] = useState([{}]);\n\n    useEffect(() =>{\n\n        const apiUrl = process.env.REACT_APP_API_URL;\n\n        fetch(`${apiUrl}/api/movements/${id}`)\n            .then(response => response.json())\n            .then(data => {\n\n                // Save data in state\n                setDataState( data );\n            \n            })\n            .catch( err => { \n                setDataState([{}]); \n            } );\n\n    },[ id, reload ])\n\n    return (\n        <>\n            <DashBoardNavBar user={ user } dispatch={ dispatch } />\n            <div className='container'>\n                <DashBoardLayout data={ dataState } />\n            </div>\n            \n        </>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { DashboardScreen } from '../components/dashboard/DashboardScreen';\n\nexport const PrivateRoutes = () => {\n    return (\n        <Switch>\n            <Route exact path='/dashboard' component={ DashboardScreen } />\n            <Route exact path='/' component={ DashboardScreen } />\n            <Redirect to='/' />\n        </Switch>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Switch, BrowserRouter as Router } from 'react-router-dom';\nimport { PublicRoutes } from './PublicRoutes';\nimport { AppContext } from '../context/AppContext';\nimport { PrivateRoutes } from './PrivateRoutes';\n\nexport const AppRouter = () => {\n\n    const { user } = useContext( AppContext );\n\n    return (\n        <Router>\n            <>\n                <Switch>\n                    {\n                        (user.logged) \n                        ? <PrivateRoutes />\n                        : <PublicRoutes />\n                    }\n                </Switch>\n            </>\n        </Router>\n    )\n}\n","\nimport { types } from '../types/types';\n\nexport const authReducer = ( state= {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            \n            return {\n                ...action.payload,\n                logged: true\n            }\n            \n            case types.logout:\n            \n                return {\n                    logged: false\n                }\n\n        default:\n            return state;\n    }\n}","import React, { useEffect, useReducer, useState } from 'react';\nimport { AppRouter } from '../routers/AppRouter';\nimport { AppContext } from '../context/AppContext';\nimport { authReducer } from '../auth/authReducer';\n\nexport const MainScreen = () => {\n\n    // Get user status from localstorage\n    const init = () => {\n        return JSON.parse(localStorage.getItem('user')) || { logged: false };\n    };\n\n    const [ user, dispatch ] = useReducer( authReducer, {}, init );\n\n    const [reload, setReload] = useState( false );\n\n    // Save user status to localstorage\n    useEffect(() => {\n        localStorage.setItem('user', JSON.stringify( user ));\n    }, [user]);\n\n    return (\n        <>\n        <AppContext.Provider value={{ user, dispatch, reload, setReload }}>\n            <AppRouter />\n        </AppContext.Provider>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MainScreen } from './components/MainScreen';\nimport './css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainScreen />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}